name: App Release

on:
  push:
    branches: [ master ] #[ release/* ]

jobs:
  build:
    name: Create Release artifact
    runs-on: macos-latest
    env:
      PROJECT_ID: ${{ secrets.PROJECT_ID }}
      SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      GOOGLE_SERVICES: ${{ secrets.GOOGLE_SERVICES }}
      KEYSTORE_RELEASE: ${{ secrets.KEYSTORE_RELEASE }}
      STORE_ALIAS: ${{ secrets.STORE_ALIAS }}
      STORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}
      GOOGLE_PLAY_KEY_PUBLISH: ${{ secrets.GOOGLE_PLAY_KEY_PUBLISH }}
      ROLL_OUT_PERCENTAGE: ${{ secrets.ROLL_OUT_PERCENTAGE }}
    steps:
      - uses: actions/checkout@v2
      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Bump version
        uses: chkfung/android-version-actions@v1.1
        with:
          gradlePath: app/build.gradle
          versionCode: ${{github.run_number}}
      - name: Assemble release
        run: |
          echo '${{ secrets.SERVICE_ACCOUNT }}' > service_account.json
          ./gradlew :app:assembleRelease
      - name: Sign app APK
        uses: r0adkll/sign-android-release@v1
        id: sign_app
        with:
          releaseDirectory: app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.KEYSTORE_RELEASE }}
          alias: ${{ secrets.STORE_ALIAS }}
          keyStorePassword: ${{ secrets.STORE_PASSWORD }}
          keyPassword: ${{ secrets.STORE_PASSWORD }}
      - name: 'Publish release artifact'
        if: always()
        uses: actions/upload-artifact@v2-preview
        with:
          name: 'release-artifact'
          path: app/build/outputs/apk/release/*
      - name: Deploy to Play Store
        id: deploy
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJson: service_account.json
          packageName: com.ciriti.stockmarket
          releaseFiles: ${{steps.sign_app.outputs.signedReleaseFile}}
          track: production