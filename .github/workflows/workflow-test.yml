name: TEST - GitHub Tag and Release

on:
  push:
    branches: [ publish_nexus ] #[ release/*asdf ]
#    paths:
#      - '!README.md'
#      - '!art/**'
#      - '!*.yml'
#      - '!build.gradle'

jobs:
  build:
    name: Create Release and tag
    runs-on: macos-latest
    env:
      GIT_USERNAME: ${{ secrets.GIT_USERNAME }}
      GIT_EMAIL: ${{ secrets.GIT_EMAIL }}
      CHANGELOG_PATH: "CHANGELOG.md"
      README_PATH: "README.md"
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Get current time
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: (MMMM, DD, YYYY)
      #      - name: Create file for signin the artifact
      #        run: |
      #          echo '${{ secrets.GPG_ENCODED }}' | base64 --decode > 0FE2A3FE.gpg
      #      - name: Set version lib into VERSION_NAME variable
      #        run: |
      #          ./gradlew app:versionTxt
      #          echo "VERSION_NAME=$(cat app/version.txt)" >> $GITHUB_ENV
      #      - name: Update CHANGELOG.md
      #        run: ./gradlew app:changeLogUpdate
      #      - name: Update README.md
      #        run: ./gradlew app:replaceInFile
      - name: Read Release Note
        run: |
          echo 'RELEASE_NOTE<<EOF' >> $GITHUB_ENV
          cat release_note.txt >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
      #      - name: Create Release
      #        uses: actions/create-release@v1
      #        env:
      #          CURRENT_TIME: "${{ steps.current-time.outputs.formattedTime }}"
      #          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      #        with:
      #          tag_name: v${{ env.VERSION_NAME }}
      #          release_name: v${{ env.VERSION_NAME }}
      #          body: |
      #            ## ${{ env.VERSION_NAME }} ${{ env.CURRENT_TIME }}
      #            ${{ env.RELEASE_NOTE }}
      #          draft: false
      #          prerelease: false
      - name: Prepare environment
        env:
          SIGNING_SECRET_KEY_RING_FILE_CONTENT: ${{ secrets.SIGNING_SECRET_KEY_RING_FILE_CONTENT }}
          SIGNING_SECRET_KEY_RING_FILE: ${{ secrets.SIGNING_SECRET_KEY_RING_FILE }}
        run: |
          sudo bash -c "echo '$SIGNING_SECRET_KEY_RING_FILE_CONTENT' | base64 -d > '$SIGNING_SECRET_KEY_RING_FILE'"
      - name: Release build
        run: ./gradlew okhttp-socket-ext:assemble :datalayer:assemble
      - name: Source jar and dokka
        run: ./gradlew androidSourcesJar javadocJar
      - name: Publish to MavenCentral
        run: ./gradlew publish closeAndReleaseStagingRepository
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
          SIGNING_SECRET_KEY_RING_FILE: ${{ secrets.SIGNING_SECRET_KEY_RING_FILE }}
#      - name: Add, commit and push CHANGELOG.md and README.md
#        run: ./gradlew app:addCommitPush