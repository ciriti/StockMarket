name: TEST - GitHub Tag and Release

on:
  push:
    branches: [ add-commit-push ] #[ release/* ]

jobs:
  build:
    name: Create Release and tag
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
#      - name: Build and test
#        run: |
#          ./gradlew app:build
      - name: Get current time
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: (MMMM, DD, YYYY)
#      - name: Extracting version lib
#        run: ./gradlew app:versionTxt
      - name: Update CHANGELOG.md and README.md then add, commit and push them
        env:
          CHANGELOG_PATH: "CHANGELOG.md"
          README_PATH: "README.md"
          RELEASE_NOTE_PATH: "release_note.txt"
        id: changelog
        run: |
          echo VERSION_NAME: $VERSION_NAME
          ./gradlew app:readmeUpdate
          ./gradlew app:changeLogUpdate -P releaseNotePath=$RELEASE_NOTE_PATH -P changeLogPath=$CHANGELOG_PATH
          ./gradlew app:addCommitPush -P files=$CHANGELOG_PATH:$README_PATH
          ./gradlew versionTxt | cat app/version.txt | echo "action_state=yellow" >> $GITHUB_ENV
          ./gradlew versionTxt | echo "VERSION_NAME=$(cat app/version.txt)" >> $GITHUB_ENV
      - name: Read Release Note
        id: release_note
        uses: juliangruber/read-file-action@v1
        with:
          path: ./release_note.txt
#      - name: Get the version
#        id: get_version
#        uses: juliangruber/read-file-action@v1
#        with:
#          path: ./app/version.txt
#      - name: Create Release
#        id: create_release
#        uses: actions/create-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
#        with:
#          tag_name: v"$VERSION_NAME"
#          release_name: v${ "$VERSION_NAME" }
#          body: |
#            ## "$VERSION_NAME" ${{ steps.current-time.outputs.formattedTime }}
#            ${{ steps.release_note.outputs.content }}
#          draft: false
#          prerelease: false
      - name: Create env variables
        env:
          CURRENT_TIME: "${{ steps.current-time.outputs.formattedTime }}"
          RELEASE_NOTE: "${{ steps.release_note.outputs.content }}"
          GET_VERSION: "${{ steps.get_version.outputs.content }}"
        run: |
          echo "## $GET_VERSION $CURRENT_TIME"
          echo VERSION_NAME: $VERSION_NAME
          echo flag: $flag
          echo GITHUB_ENV: $GITHUB_ENV
          echo action_state: $action_state
          echo action_state_1: $action_state_1
#      - name: Bintray upload artifact
#        env:
#          BINTRAY_USER: ${{ secrets.BINTRAY_USER }}
#          BINTRAY_APIKEY: ${{ secrets.BINTRAY_APIKEY }}
#        run: |
#          ./gradlew okhttp-socket-ext:bintrayUpload