apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.github.bump-versioncode'
apply plugin: 'io.github.update-changelog'
apply plugin: "io.github.replace-in-file"
apply plugin: "io.github.git-utils"

/**
 * This task will create a file version.txt that contains
 * the version name used to create tag and release on github
 */
apply from: '../buildfile/version-utils.gradle'
apply from: rootDir.path + '/buildfile/changelog_utils.gradle'
apply from: rootDir.path + '/buildfile/ktlint_utils.gradle'

android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "com.ciriti.stockmarket"
        minSdkVersion 23
        targetSdkVersion 29
        versionCode = Long.valueOf(VERSION_CODE)
        versionName version_name

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            buildConfigField "String", "SOCKET_URL", '"wss://ws-feed.gdax.com"'
            buildConfigField "String", "URL_PRODUCTS", '"https://api.gdax.com/products"'
        }
        release {
            buildConfigField "String", "SOCKET_URL", '"wss://ws-feed.gdax.com"'
            buildConfigField "String", "URL_PRODUCTS", '"https://api.gdax.com/products"'
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            //  signingConfig ==> It is signed using the github action, no need to set it here
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(":datalayer")
//    implementation "io.github.ciriti:okhttp-socket-ext:1.0.1"

    implementation Libs.kotlin_stdlib_jdk7
    implementation Libs.kotlin_reflect
    implementation Libs.appcompat
    implementation Libs.core_ktx
    implementation Libs.constraintlayout
    implementation Libs.kotlinx_coroutines_android
    implementation Libs.material

    implementation Libs.arrow_core

    // di
    implementation Libs.koin_core
    implementation Libs.koin_android_viewmodel

    // web socket
    implementation Libs.scarlet
    implementation Libs.scarlet_websocket_okhttp
    implementation Libs.scarlet_stream_adapter_coroutines
    implementation Libs.scarlet_stream_adapter_rxjava
    implementation Libs.scarlet_message_adapter_moshi
    implementation Libs.scarlet_lifecycle_android

    implementation Libs.converter_gson
    implementation Libs.okhttp

    implementation Libs.lifecycle_viewmodel
    implementation Libs.lifecycle_runtime_ktx
    implementation "androidx.legacy:legacy-support-v4:1.0.0"
    implementation "com.google.android.material:material:1.2.1"
    implementation "androidx.recyclerview:recyclerview:1.1.0"

    androidTestImplementation Libs.koin_test
    androidTestImplementation Libs.androidx_test_ext_junit

    androidTestImplementation Libs.androidx_test_runner
    androidTestImplementation Libs.androidx_test_rules
    androidTestImplementation Libs.espresso_core
    androidTestImplementation Libs.espresso_contrib
    androidTestImplementation Libs.scarlet_websocket_scarlet_core_internal
    androidTestImplementation Libs.mockk_android

    testImplementation Libs.kotlinx_coroutines_test
    testImplementation Libs.scarlet_websocket_scarlet_core_internal
    testImplementation Libs.junit_junit
    testImplementation Libs.mockk
    testImplementation Libs.core_testing
    androidTestImplementation Libs.androidx_test_ext_junit
    androidTestImplementation Libs.espresso_core

    //RXJava2
    implementation("io.reactivex.rxjava2:rxkotlin:2.4.0")
    implementation("io.reactivex.rxjava2:rxandroid:2.1.1")
    implementation("io.reactivex.rxjava2:rxjava:2.2.19")

}

// kotlin -> tasks.register<ChangeLogUpdateTask>("changeLogUpdate")
//task changeLogUpdate(type: ChangeLogUpdateTask)
//task readmeUpdate(type: ReadmeUpdateTask)
//task addCommitPush(type: AddCommitPushTask)

versionCodePropPath{
    path = "gradle.properties"
}

changeLogConfig{
    changeLogPath = rootDir.path + "/CHANGELOG.md"
    content = file(rootDir.path + "/release_note.txt").text
    version = "$version_name"
}

replaceInFile{
    docs{
        doc{
            path = rootDir.path + "/README.md"
            find = "io.github.ciriti:okhttp-socket-ext:(\\d)+\\.(\\d)+\\.(\\d)+"
            replaceWith = "io.github.ciriti:okhttp-socket-ext:$version_name"
        }
        doc1{
            path = rootDir.path + "/README.md"
            find = "io.github.ciriti:gdax-data:(\\d)+\\.(\\d)+\\.(\\d)+"
            replaceWith = "io.github.ciriti:gdax-data:$version_name"
        }
    }
}

addCommitPushConfig{
//    fileList = [
//            rootDir.path+'/filetest1.txt',
//            rootDir.path+'/filetest2.txt'
//    ]
}

addCommitPushConfig{
    fileList = [
            "$rootDir.path/filetest1.txt".toString(),
            "$rootDir.path/filetest2.txt".toString()
    ]
}

